directive @uppercase on FIELD_DEFINITION

type Query {
	pets:[Pet]
	pet(id:Int): Pet
	petTypes:[PetType]
	#visits:[Visit]
	#owners:[Owner]
	
	vets: [Vet!]!
    vet(id: Int!): Vet  
}

type PetType {
	id:Int!
	name:String 
}

type Pet {
	id:Int!
	name:String @uppercase
	type:PetType
	visits:[Visit]
	owner:Owner
	#birthDate:Date
}	

type Visit {
	id:Int!
	description:String
	pet:Pet
	
	#date:Date!
	treatingVet:Vet
}


# Day 3 additions

# Specialty of a Vet
type Specialty  {
    id: Int!
    name: String!
}


# Interface that describes a Person, i.e. a Vet or an Owner
interface Person {
    id: Int!
    firstName: String!
    lastName: String!
}


type Owner implements Person {
    id: Int!
    firstName: String!
    lastName: String!
    address: String!
    city: String!
    telephone: String!

    # A list of Pets this Owner owns
    pets: [Pet!]!
}



# A Vetenerian
type Vet implements Person {
    id: Int!

    # The Vetenarian's first name
    firstName: String!

    # The Vetenarian's last name
    lastName: String!

    # What is this Vet specialized in? ==> EAGER fetching, no need for @SchemaMapping
    specialties: [Specialty!]!

    # All of this Vet's visits
    visits: [Visit!]!
}